---
name: CI

on: [push, pull_request]

jobs:

  test:
    name: Unit tests

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [2.7, 3.6, 3.7]

    steps:
      - uses: actions/checkout@v2
      - name: set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: install openstudio
        run: |
          wget https://github.com/NREL/OpenStudio/releases/download/v3.1.0/OpenStudio-3.1.0+e165090621-Linux.deb
          sudo dpkg -i ./OpenStudio-3.1.0+e165090621-Linux.deb
      - name: install honeybee-openstudio-gem
        run: |
          mkdir -p ~/ladybug_tools/resources/measures/honeybee_openstudio_gem
          curl -SL -o honeybee-openstudio-gem.tar.gz https://github.com/ladybug-tools/honeybee-openstudio-gem/archive/v$HONEYBEE_OPENSTUDIO_GEM_VERSION.tar.gz
          tar -zxvf honeybee-openstudio-gem.tar.gz
          mv honeybee-openstudio-gem-$HONEYBEE_OPENSTUDIO_GEM_VERSION/lib ~/ladybug_tools/resources/measures/honeybee_openstudio_gem
          rm -r honeybee-openstudio-gem-$HONEYBEE_OPENSTUDIO_GEM_VERSION
          rm honeybee-openstudio-gem.tar.gz
        env:
          HONEYBEE_OPENSTUDIO_GEM_VERSION: '2.13.0'
      - name: install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r dev-requirements.txt
      - name: run tests
        run: python -m pytest --cov=. tests/
      - name: run test coverage
        if: ${{ matrix.python-version == 3.7 }}
        run: |
          coverage report
          coveralls
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    name: Deploy to GitHub and PyPI
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/master' && github.repository_owner == 'ladybug-tools'
    steps:
      - uses: actions/checkout@v2
      - name: set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: set up node  # we need node for for semantic release
        uses: actions/setup-node@v2.1.2
        with:
          node-version: 14.2.0
      - name: install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r dev-requirements.txt
      - name: install semantic-release
        run:
          npm install @semantic-release/exec
      - name: run semantic release
        run:
          npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
          PYPI_USERNAME: ${{ secrets.PYPI_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}

  docs:
    name: Generate docs
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/master' && github.repository_owner == 'ladybug-tools'
    steps:
      - uses: actions/checkout@v2
      - name: set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: install dependencies
        run: |
          pip install -U .
          pip install -r dev-requirements.txt
          sphinx-apidoc -f -e -d 4 -o ./docs ./honeybee_energy
          sphinx-build -b html ./docs ./docs/_build/docs

      - name: deploy to github pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          # this will use ladybugbot token
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: docs/_build/
          force_orphan: true
          keep_files: false
          full_commit_message: 'deploy: update docs'
